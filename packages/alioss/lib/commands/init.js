!function(e){"function"==typeof define&&define.amd?define(e):e()}((function(){"use strict";const e=require("fs-extra"),s=require("chalk"),n=require("path"),r=require("inquirer"),i=require("../utils/create.uid"),{AES_encrypt:t}=require("../utils/aes.crypto"),o={description:"alioss 初始化",async apply(){const o=n.resolve(process.cwd(),"alioss.config.js"),c=n.resolve(process.cwd(),".ossignore"),a=n.resolve(process.cwd(),".osskey.js");if(!e.existsSync(o)){const n=i(),u=i(),p=[{type:"input",name:"localDir",message:"本地上传目录"},{type:"input",name:"remoteDir",message:"oss上传目录"},{type:"input",name:"region",message:"oss region"},{type:"input",name:"accessKeyId",message:"oss accessKeyId"},{type:"input",name:"accessKeySecret",message:"oss accessKeySecret"},{type:"input",name:"bucket",message:"oss bucket"}],{localDir:l,remoteDir:y,region:m,accessKeyId:d,accessKeySecret:g,bucket:f}=await r.prompt(p),k=`const {key, iv} = require("./.osskey.js")\nmodule.exports = {\n  key,\n  iv,\n  localDir:"${l}",\n  remoteDir:"${y}",\n  aliossOptions:{\n    region: "${t(m,n,u)}",\n    accessKeyId: "${t(d,n,u)}",\n    accessKeySecret: "${t(g,n,u)}",\n    bucket: "${t(f,n,u)}"\n  }\n}\n`,$=`module.exports = {\n  key: "${n}",\n  iv: "${u}"\n}\n`;e.writeFile(o,k,"utf8",(e=>{e&&console.log(s.red(`init err：${e}`))})),e.writeFile(a,$,"utf8",(e=>{e&&console.log(s.red(`init err：${e}`))})),e.ensureFileSync(c)}}};module.exports=o}));
